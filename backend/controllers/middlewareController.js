const jwt = require("jsonwebtoken");

const middlewareController = {
  //Verify Token
  verifyToken: (req, res, next) => {
    const token = req.headers.token.split(" ")[1];
    console.log("Token from headers:", token); // Generated by Copilot
    if (token) {
      jwt.verify(token, process.env.JWT_ACCESS_KEY, (err, user) => {
        if (err) {
          console.error("Token verification error:", err); // Generated by Copilot
          return res.status(403).json("Token Not Valid");
        }
        req.user = user;
        next();
      });
    } else {
      console.error("No token provided"); // Generated by Copilot
      return res.status(401).json("You're not authenticated");
    }
  },

  verifyTokenAndAdmin: (req, res, next) => {
    middlewareController.verifyToken(req, res, () => {
      if (req.user.id == req.params.id || req.user.role === "admin") {
        next();
      } else {
        return res.status(403).json("You're not allowed to do this function");
      }
    });
  },

  verifyTokenAndAdminAndTutor: (req, res, next) => {
    middlewareController.verifyToken(req, res, () => {
      if (req.user.id == req.params.id || req.user.role === "admin" || req.user.role === "tutor") {
        next();
      } else {
        res.status(403).json("You're not allowed to do this function");
      }
    });
  },
};

module.exports = middlewareController;
