import { Toaster } from "react-hot-toast";
import { Navigate, Route, Routes, useNavigate } from "react-router";
import AdminDashboard from "./pages/@admin/AdminDashboard";
import AdminLayout from "./pages/@admin/AdminLayout";
import StudentDashboard from "./pages/@student/StudentDashboard";
import TutorDashboard from "./pages/@tutor/TutorDashboard";
import LoginPage from "./pages/Auth/LoginPage";
import RegisterPage from "./pages/Auth/RegisterPage";
import NoAccess from "./pages/Other/NoAccess";
import NotFound from "./pages/Other/NotFound";
import { useAuthStore } from "./store/useAuthStore";
import { Suspense, useEffect } from "react";
import { jwtDecode } from "jwt-decode";

function App() {
  const { authUser, accessToken, logout } = useAuthStore();
  const navigate = useNavigate();

  const getDefaultRoute = () => {
    if (!authUser) return "/";
    switch (authUser.role) {
      case "admin":
        return "/admin";
      case "tutor":
        return "/tutor";
      case "student":
        return "/student";
      default:
        return "/";
    }
  };

  useEffect(() => {
    if (accessToken && authUser) {
      const { role } = authUser;
      localStorage.setItem("accessToken", accessToken);
      console.log("accessToken:", accessToken);
      // Check if the token is expired
      const decodedToken = jwtDecode(accessToken);
      const currentTime = Date.now() / 1000;
      if (decodedToken.exp < currentTime) {
        logout(); // Log out the user if the token is expired - Generated by Copilot
        return;
      }

      switch (role) {
        case "admin":
          navigate("/admin");
          break;
        case "tutor":
          navigate("/tutor");
          break;
        case "student":
          navigate("/student");
          break;
        default:
          navigate("/");
      }
    }
    // const decodedToken = jwtDecode(accessToken);
    // const currentTime = Date.now() / 1000;
    // if (decodedToken.exp < currentTime) {
    //   localStorage.clear();
    //   navigate("/");
    // }
  }, [accessToken, authUser, navigate, logout]);

  console.log("Auth user:", authUser);
  // console.log("accessToken:", authUser?.accessToken);

  return (
    <>
      <Routes>
        {/* AUTH */}
        <Route path="/" element={<LoginPage />} />
        <Route
          path="/register"
          element={
            <Suspense fallback={<h1>Loading</h1>}>
              <RegisterPage />
            </Suspense>
          }
        />

        {/* ADMIN */}
        <Route
          path="/admin"
          element={
            authUser && authUser.role === "admin" ? (
              <AdminLayout />
            ) : authUser && authUser.role === "student" ? (
              <Navigate to="/no-access" />
            ) : (
              <Navigate to="/" />
            )
          }
        >
          <Route index element={<AdminDashboard />} />
        </Route>

        {/* TUTOR */}
        <Route
          path="/tutor"
          element={
            authUser && authUser.role === "tutor" ? (
              <TutorDashboard />
            ) : authUser && authUser.role === "student" && authUser.role === "admin" ? (
              <Navigate to="/no-access" />
            ) : (
              <Navigate to="/" />
            )
          }
        />

        {/* STUDENT */}
        <Route
          path="/student"
          element={
            authUser && authUser.role === "student" ? <StudentDashboard /> : <Navigate to="/" />
          }
        />

        <Route path="/no-access" element={<NoAccess />} />

        {/* <Route path="/settings" element={<SettingPage />} /> */}
        {/* <Route path="/profile" element={authUser ? <ProfilePage /> : <Navigate to="/login" />} /> */}

        <Route path="*" element={<NotFound />} />
      </Routes>

      <Toaster />
    </>
  );
}

export default App;
